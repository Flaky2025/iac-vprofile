name: "Vprofile IAC"
on:
  push:
    branches:
      - main
      - stage
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**

env:
 AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
 AWS_REGION: us-east-1
 EKS_CLUSTER: vprofile-eks

jobs:
  terraform:
    name: "Apply terraform code changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Terraform with specified version
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.3
        
      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE" -backend-config="region=$AWS_REGION" -backend-config="key=global/s3/terraform.tfstate"

      - name: Terraform format
        id: fmt
        run: terraform fmt -check #checks if the input is formatted according to the standard style

      - name: Terraform validate
        id: validate  
        run: terraform validate #checks the configuration is syntactically valid and internally consistent
      
      - name: Terraform plan
        id: plan  
        run: terraform plan -no-color -input=false -out planfile #creates an execution plan for Terraform and saves it to a file named planfile
        continue-on-error: true #continues the workflow even if the plan step fails (e.g., due to no changes detected)

      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1 #exits with a status code of 1 if the plan step failed, indicating an error

      